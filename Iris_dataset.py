# -*- coding: utf-8 -*-
"""Atividade-avaliativa-II

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bxIY9kE54HmuXlxUJcBk8prHt8_1T32w
"""

import plotly.express as px
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix
from sklearn.datasets import load_iris
from sklearn.cluster import KMeans

df = px.data.iris()
fig = px.scatter_3d(df, x='sepal_length', y='sepal_width', z='petal_width', color='species')
fig.show()

X, y = load_iris(return_X_y=True)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=13)

n_neighbors = 10
model_knn = KNeighborsClassifier(n_neighbors=n_neighbors)
model_knn.fit(X_train, y_train)

y_pred_knn = model_knn.predict(X_test)

iris = load_iris()
print(classification_report(y_test, y_pred_knn, target_names=iris.target_names))


cm_knn = confusion_matrix(y_test, y_pred_knn)
print("Matriz de Confusão para KNN:")
print(cm_knn)

n_clusters = 3
model_kmeans = KMeans(n_clusters=n_clusters, random_state=0)
model_kmeans.fit(X_train)

labels_kmeans = model_kmeans.labels_
y_pred_kmeans = model_kmeans.predict(X_test)

print(classification_report(y_test, y_pred_kmeans, target_names=iris.target_names))


cm_kmeans = confusion_matrix(y_test, y_pred_kmeans)
print("Matriz de Confusão para K-Means:")
print(cm_kmeans)